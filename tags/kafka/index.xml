<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kafka on Huabing Blog</title><link>https://lopins.github.io/hugo-template/tags/kafka/</link><description>Recent content in Kafka on Huabing Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 11 Sep 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://lopins.github.io/hugo-template/tags/kafka/index.xml" rel="self" type="application/rss+xml"/><item><title>Enhance Istio Distributed Tracing with OpenTracing</title><link>https://lopins.github.io/hugo-template/post/2019-07-02-using-opentracing-with-istio-english/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2019-07-02-using-opentracing-with-istio-english/</guid><description>&lt;p>In the previous post, we discussed how to use Opentracing to help Istio Service Mesh to propagate tracing context across process boundaries, and how to enrich Istio/Envoy generated traces with method-level spans to get more fine-grained insights to the services.&lt;/p>
&lt;p>For now, all that we have been talking is just about synchronous RPC (HTTP/REST), however, we can’t ignore the fact that asynchronous messaging is also widely adopted as an inter-services communication mechanism. So in this post, we will continue to use the eshop demo to explore how asynchronous messaging, specifically Kafka, can be traced in Istio service mesh with the help of Opentracing.&lt;/p></description></item><item><title>洞若观火：使用OpenTracing增强Istio的调用链跟踪</title><link>https://lopins.github.io/hugo-template/post/2019-07-02-using-opentracing-with-istio/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2019-07-02-using-opentracing-with-istio/</guid><description>&lt;p>在上一篇文章中，我们通过一个网上商店的示例程序学习了如何使用Opentracing在Istio服务网格中传递分布式调用跟踪的上下文，以及如何将方法级的调用信息加入到Istio/Envoy生成的调用链中。采用Opentracing可以减少应用代码中传递HTTP header的重复代码；也可以根据需要在调用链中加入更细粒度的Span，以用于对系统性能瓶颈进行在线分析。&lt;/p></description></item></channel></rss>