<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ambient Mesh on Huabing Blog</title><link>https://lopins.github.io/hugo-template/tags/ambient-mesh/</link><description>Recent content in Ambient Mesh on Huabing Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 17 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://lopins.github.io/hugo-template/tags/ambient-mesh/index.xml" rel="self" type="application/rss+xml"/><item><title>Istio Ambient 模式流量管理实现机制详解（三）</title><link>https://lopins.github.io/hugo-template/post/2022-10-17-ambient-deep-dive-3/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2022-10-17-ambient-deep-dive-3/</guid><description>&lt;p>本文将继续介绍 ambient 模式下四层流量处理的实现机制。本文将以 bookinfo 应用中 productpage 访问 reviews 的请求路径为例来分析一个请求从 client 端发出到 server 端处理的四层流量处理流程。&lt;/p>
&lt;p>reviews 有三个版本的 deployment，我们首先为 v1 和 v2 设置反亲和和亲和规则，以确保 reviews v1 和 productpage 部署在同一个 node 上，reviews v2 和 productpage 部署在不同 node 上，以模拟 client 和 server 分别处于相同 node 和不同 node 中这两种情况。&lt;/p></description></item><item><title>Istio Ambient 模式流量管理实现机制详解（二）</title><link>https://lopins.github.io/hugo-template/post/2022-09-11-ambient-deep-dive-2/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2022-09-11-ambient-deep-dive-2/</guid><description>&lt;p>ambient 模式中，应用 pod 通过 ztunnel 之间的安全通道进行通信。要实现这一点，Istio 需要劫持应用 pod 的 outbound 和 inbound 流量，并转发到 ztunnel 进行处理。这是如何实现的呢？&lt;/p>
&lt;p>Istio 采用了 iptables 规则和&lt;a href="https://en.wikipedia.org/wiki/Policy-based_routing">策略路由（Policy-based Routing）&lt;/a>来将应用 pod 的流量转发到 ztunnel。下面我们以 &lt;a href="https://www.zhaohuabing.com/post/2022-09-10-try-istio-ambient/">初探 Istio Ambient 模式&lt;/a> 中安装的 demo 为例来详细介绍 ambient 模式是如何对流量进行劫持，并转发到 ztunnel 中的。&lt;/p></description></item><item><title>Istio Ambient 模式流量管理实现机制详解（一）</title><link>https://lopins.github.io/hugo-template/post/2022-09-11-ambient-deep-dive-1/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2022-09-11-ambient-deep-dive-1/</guid><description>&lt;p>Istio ambient 模式采用了被称为 &lt;a href="https://www.zhaohuabing.com/post/2022-09-08-introducing-ambient-mesh/#%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AA-ambient-mesh">HBONE&lt;/a> 的方式来连接 ztunnel 和 waypoint proxy。HBONE 是 HTTP-Based Overlay Network Environment 的缩写。虽然该名称是第一次看到，其实 HBONE 并不是 Istio 创建出来的一个新协议，而只是利用了 HTTP 协议标准提供的隧道能力。简单地说，ambient 模式采用了 &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/CONNECT">HTTP 的 CONNECT 方法&lt;/a> 在 ztunnel 和 waypoint proxy 创建了一个隧道，通过该隧道来传输数据。本文将分析 HBONE 的实现机制和原理。&lt;/p></description></item><item><title>Try out Istio Ambient mode</title><link>https://lopins.github.io/hugo-template/post/2022-09-10-try-istio-ambient-english/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2022-09-10-try-istio-ambient-english/</guid><description>&lt;p>Ambient is a new data-plane model that Istio has just announced support for. In this post, we will try to install Istio’s ambient model and use the bookinfo demo to experience the L4 and L7 capabilities offered by ambient.&lt;/p>
&lt;blockquote>
&lt;p>Note: L4 refers to the four layers of the OSI standard network model, i.e., TCP layer processing. L7 refers to layer seven of the OSI standard network model, which is the application layer processing, generally referred to as HTTP protocol processing.&lt;/p></description></item><item><title>初探 Istio Ambient 模式</title><link>https://lopins.github.io/hugo-template/post/2022-09-10-try-istio-ambient/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2022-09-10-try-istio-ambient/</guid><description>&lt;p>Ambient 是 Istio 刚刚宣布支持的一种新的数据面模式，在本篇文章中，我们将尝试安装 Istio 的 ambient 模式，并采用 bookinfo demo 来体验 ambient 提供的 L4 和 L7 能力。&lt;/p>
&lt;blockquote>
&lt;p>备注： L4 指 OSI 标准网络模型的四层，即 TCP 层的处理。 L7 指 OSI 标准网络模型的七层，即应用层的处理，一般指的是 HTTP 协议的处理。&lt;/p></description></item><item><title>译文：Istio Ambient 模式安全架构深度解析</title><link>https://lopins.github.io/hugo-template/post/2022-09-09-ambient-mesh-security-deep-dive/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2022-09-09-ambient-mesh-security-deep-dive/</guid><description>&lt;p>深入分析刚刚公布的 &lt;a href="https://www.zhaohuabing.com/post/2022-09-08-introducing-ambient-mesh/">Istio ambient mesh&lt;/a>（Istio 的一个无 sidecar 数据平面）对于服务网格的安全来说意味着什么。&lt;/p>
&lt;p>我们最近发布了 Istio ambient mesh，它是 Istio 的一个无 sidecar 数据平面。正如&lt;a href="https://www.zhaohuabing.com/post/2022-09-08-introducing-ambient-mesh/">公告博客&lt;/a>中所说，我们使用 ambient mesh 解决的首要问题是简化操作、更广泛的应用兼容性、降低基础设施成本和提高性能。在设计 ambient 数据平面时，我们仔细地平衡操作、成本和性能的相关问题，同时避免牺牲安全或功能。由于 ambient 组件运行在应用 pod 之外，安全边界已经发生了变化&amp;ndash;我们相信会更好。在这篇博客中，我们将详细介绍这些变化，并比较与 sidecar 部署模式的差异。&lt;/p></description></item><item><title>译文：重磅消息 - Istio 引入 Ambient Mesh 模式</title><link>https://lopins.github.io/hugo-template/post/2022-09-08-introducing-ambient-mesh/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2022-09-08-introducing-ambient-mesh/</guid><description>&lt;p>译者按：Istio 于2022年9月7日宣布了一种全新的数据平面模式 “ambient mesh”（ambient 意思是“环境的”，这里指 ambient mesh 使用了环境中的共享代理而不是 sidecar，下文直接使用英文原文），简单地讲就是将数据面的代理从应用 pod 中剥离出来独立部署，以彻底解决 mesh 基础设施和应用部署耦合的问题。该变化是 Istio 自创建以来的第二次大的架构变动，也说明 Istio 社区在持续创新，以解决 service mesh 生产中面临的实际问题。&lt;/p></description></item></channel></rss>