<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Presentations on Huabing Blog</title><link>https://lopins.github.io/hugo-template/categories/presentations/</link><description>Recent content in Presentations on Huabing Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 16 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://lopins.github.io/hugo-template/categories/presentations/index.xml" rel="self" type="application/rss+xml"/><item><title>KubeCon NA - Introduce MetaProtocol Proxy: A Layer-7 Proxy Framework Powered by Envoy</title><link>https://lopins.github.io/hugo-template/post/2023-11-16-kubecon-na-metaprotocol/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2023-11-16-kubecon-na-metaprotocol/</guid><description>&lt;p>Even with Envoy&amp;rsquo;s powerful filter extension mechanism, writing a proxy for none-http protocols from scratch can be challenging. MetaProtocol Proxy solves this by abstracting layer-7 proxy with a concept called metadata and providing a “batteries included” framework that includes common traffic management capabilities: load balancing, circuit breaker, routing, rate limiting, fault injection, observability, etc. To write a layer-7 proxy for a new protocol, the only thing you need to do is implementing the codec interface.&lt;/p></description></item><item><title>KubeCon 上海分享: Envoy Gateway - The API Gateway in the Cloud Native Era</title><link>https://lopins.github.io/hugo-template/post/2023-11-01-kubecon-shanghai-2023-envoy-gateway-the-api-gateway-in-the-cloud-native-era/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2023-11-01-kubecon-shanghai-2023-envoy-gateway-the-api-gateway-in-the-cloud-native-era/</guid><description>&lt;p>EnvoyProx 是云原生时代的代理之一，也是CNCF下的毕业项目之一。Envoy Gateway 是由 EnvoyProxy 的创始人 Matt Klein 发起的 API 网关项目。由我所在公司（Tetrate.io）以及 Emissary、Contour 等其他 API 网关项目共同维护。Envoy Gateway 作为 EnvoyProxy 发起的官方 API 网关项目，是基于 EnvoyProxy 的南北向 API 网关的官方实现，大大降低了使用 EnvoyProxy 的门槛，使用户不必重复“造轮子”来构建 EnvoyProxy 控制平面，并处理难以理解的复杂 xDS 协议和 EnvoyProxy 的配置。Envoy Gateway 使用 Kubernetes Gateway API 作为其配置，可以轻松启动管理南北向流量。Envoy Gateway 在多个社区和积极贡献者的推动下迅速发展。本主题将介绍为什么 Envoy Gateway 是云原生时代的 API 网关。&lt;/p></description></item><item><title>5分钟内将 Dubbo 服务接入 Istio 服务网格</title><link>https://lopins.github.io/hugo-template/post/2022-11-18-dubbo-aeraki-mesh-in-5-minutes/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2022-11-18-dubbo-aeraki-mesh-in-5-minutes/</guid><description>&lt;p>&lt;a href="https://zhaohuabing.com/web-slides/manage-dubbo-in-istio-in-5-minutes/">幻灯片&lt;/a>
&lt;a href="https://aeraki.net">Aeraki Mesh 官网&lt;/a>
&lt;a href="https://www.aeraki.net/zh/docs/v1.x/tutorials/dubbo">Dubbo 接入教程&lt;/a>
&lt;a href="https://www.aeraki.net/zh/docs/v1.x/tutorials/implement-a-custom-protocol">私有协议接入教程&lt;/a>
&lt;a href="https://github.com/aeraki-mesh">Github&lt;/a>&lt;/p>

&lt;link rel="stylesheet" href="https://lopins.github.io/hugo-template/css/hugo-easy-gallery.css" />
&lt;div class="box" >
 &lt;figure itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
 &lt;div class="img">
 &lt;img itemprop="thumbnail" src="https://zhaohuabing.com/web-slides/manage-dubbo-in-istio-in-5-minutes/0.png" />
 &lt;/div>
 &lt;a href="https://zhaohuabing.com/web-slides/manage-dubbo-in-istio-in-5-minutes/" itemprop="contentUrl">&lt;/a>
 &lt;/figure>
&lt;/div>




&lt;style>
 #biliplayer {
 width: 100%;
 height: 600px;
 }
 @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {
 #biliplayer {
 width: 100%;
 height: 250px;
 }
 }
&lt;/style>


 &lt;div>
 &lt;iframe id="biliplayer" src="//player.bilibili.com/player.html?bvid=BV1fP411g7zN&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" loading="lazy" >&lt;/iframe>
 &lt;/div></description></item><item><title>Service Mesh Summit 2022 Dubbo Demo</title><link>https://lopins.github.io/hugo-template/post/2022-09-26-servicemesh-summit2022-dubbo-aeraki-mesh/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2022-09-26-servicemesh-summit2022-dubbo-aeraki-mesh/</guid><description>&lt;p>&lt;a href="https://aeraki.net">Aeraki Mesh 官网&lt;/a>
&lt;a href="https://zhaohuabing.com/zh/docs/v1.x/tutorials/dubbo">Dubbo 接入教程&lt;/a>
&lt;a href="https://www.aeraki.net/zh/docs/v1.x/tutorials/implement-a-custom-protocol">私有协议接入教程&lt;/a>
&lt;a href="https://github.com/aeraki-mesh">Github&lt;/a>&lt;/p>



&lt;style>
 #biliplayer {
 width: 100%;
 height: 600px;
 }
 @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {
 #biliplayer {
 width: 100%;
 height: 250px;
 }
 }
&lt;/style>


 &lt;div>
 &lt;iframe id="biliplayer" src="//player.bilibili.com/player.html?bvid=BV1oe4y167kz&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" loading="lazy" >&lt;/iframe>
 &lt;/div></description></item><item><title>Istiocon 2022 分享：Tencent Music’s service mesh practice with Istio and Aeraki(Istio + Aeraki 在腾讯音乐的服务网格落地)</title><link>https://lopins.github.io/hugo-template/post/2022-04-26-aeraki-tencent-music-istiocon2022/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2022-04-26-aeraki-tencent-music-istiocon2022/</guid><description>&lt;h2 id="istiocon-介绍">IstioCon 介绍&lt;/h2>
&lt;p>IstioCon 是 Istio 社区一年一度举行的全球线上峰会，此次峰会包含主题演讲、技术演讲、闪电演讲、研讨会和路线图会议等多种形态，聚焦社区新特性、生产落地案例、动手实战、社区生态发展等话题。&lt;/p></description></item><item><title>腾讯云原生：Areaki Mesh 在 2022 冬奥会视频直播应用中的服务网格实践</title><link>https://lopins.github.io/hugo-template/post/2022-03-30-aeraki-mesh-winter-olympics-practice/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2022-03-30-aeraki-mesh-winter-olympics-practice/</guid><description>&lt;h2 id="主题简介">主题简介&lt;/h2>
&lt;p>服务网格已经成为微服务的基础设施，但目前主流的服务网格产品只能处理 HTTP 协议，不支持其他七层协议，是服务网格落地的主要困难之一。本次直播分享主要介绍腾讯云服务网格团队开源的 Aeraki Mesh 项目如何通过扩展 Istio 来支持 Thrift，Dubbo 等开源协议以及私有协议，并分享腾讯融媒体采用 Aeraki Mesh 支撑 2022 冬奥会视频直播的实践经验&lt;/p></description></item><item><title>Istio Meetup China：全栈服务网格 - Aeraki 助你在 Istio 服务网格中管理任何七层流量</title><link>https://lopins.github.io/hugo-template/post/2021-07-10-full-stack-service-mesh/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2021-07-10-full-stack-service-mesh/</guid><description>&lt;h2 id="主题简介">主题简介&lt;/h2>
&lt;p>流量管理是 Istio 服务网格的核心能力，然而 Istio 缺省只提供了 HTTP 和 gRPC 两种协议的七层管理能力。对于微服务中常用的其他协议，包括 RPC、Messaging、Cache、Database等，Istio 只支持在四层上对这些协议进行处理。这导致我们将微服务应用迁移到 Istio 服务网格时，无法充分利用服务网格提供的流量管理能力。开源项目 Aeraki 提供了一个第三方协议的扩展框架，支持在 Istio 中对任意七层流量进行管理，提供动态路由、负载均衡、熔断等流量管理能力。本次分享将介绍如何使用 Aeraki 在 Istio 服务网格中管理任何七层协议，包括 Thrift，Dubbo，Redis，以及私有 RPC 协议等，并演示一个使用 Aeraki 管理第三方 RPC 协议的示例。&lt;/p></description></item><item><title>IstioCon 2021: How to Manage Any Layer-7 Traffic in an Istio Service Mesh?</title><link>https://lopins.github.io/hugo-template/post/2021-03-02-manage-any-layer-7-traffic-in-istio/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2021-03-02-manage-any-layer-7-traffic-in-istio/</guid><description>&lt;p>备注：本文根据腾讯云赵化冰和知乎唐阳在 IstioCon 2021 中的演讲 &lt;a href="https://events.istio.io/istiocon-2021/sessions/how-to-manage-any-layer-7-traffic-in-an-istio-service-mesh/">“How to Manage Any Layer-7 Traffic in an Istio Service Mesh?”&lt;/a> 整理而成。&lt;/p>
&lt;p>大家好，今天我们想和大家分享的主题是如何扩展 Istio 以支持任何七层协议？作为云原生领域中一个人气非常高的开源项目， Istio 目前已经基本成为了 Service Mesh 的事实标准。腾讯云上也提供了基于 Istio 进行增强，和 Istio API 完全兼容的 Service Mesh 管理服务 TCM（Tencent Cloud Mesh），以帮助我们的用户以较小的迁移成本和维护代价快速利用到 Service Mesh 提供的流量管理和服务治理能力。今天非常高兴能够有这个机会来和大家一起分享一下我们在此过程中的一些经验。&lt;/p></description></item><item><title>CNBPS 2020：Istio 流量管理原理与协议扩展</title><link>https://lopins.github.io/hugo-template/post/2020-12-07-cnbps2020-istio-traffic-management/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2020-12-07-cnbps2020-istio-traffic-management/</guid><description>&lt;p>通过本次的分享，听众可以理解Istio流量管理背后的实现原理，包括控制面流量管理模型和数据面流量转发机制。本次分享还将介绍如何对Istio进行扩展，以支持更多地七层协议，如dubbo，thrift，redis等等。&lt;/p></description></item><item><title>CNBPS 2020：云原生应用架构专场介绍</title><link>https://lopins.github.io/hugo-template/post/2020-11-12-cnbps2020/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2020-11-12-cnbps2020/</guid><description>&lt;p>11月19-21日，CNBPS 2020重磅回归！&lt;/p>
&lt;p>作为一年一度的云原生科技盛会，众多云原生届的“顶流”将在这里聚集，展现云原生世界的科技想象力。&lt;/p>
&lt;p>了解云原生趋势和最佳实践？来这一场就够了！&lt;/p></description></item><item><title>Service Mesher Meetup 成都站：Service Mesh是下一代SDN吗？</title><link>https://lopins.github.io/hugo-template/post/2019-10-26-what-can-service-mesh-learn-from-sdn/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2019-10-26-what-can-service-mesh-learn-from-sdn/</guid><description>&lt;p>如果具有通信或者网络行业的知识背景，那么你对SDN(Software Defined Network)一定不会陌生。你也许已经注意到，近来在微服务领域兴起的Service Mesh和SDN(Software Defined Network) 非常相似，这两者都采用了软件对网络进行管理和控制，也都采用了包含控制面和数据面的类似架构。&lt;/p></description></item><item><title>LFN ONAP Beijing Release Developer Forum: MSB to Support Carrier Grade ONAP Microservice Architecture with Service Mesh</title><link>https://lopins.github.io/hugo-template/post/2017-11-11-onap-msb-to-support-carrier-grade-onap-microservice-architecture-with-service-mesh/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2017-11-11-onap-msb-to-support-carrier-grade-onap-microservice-architecture-with-service-mesh/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>In this session, I&amp;rsquo;ll talk about the MSB Plan for R2 and Beyond. I&amp;rsquo;ll also discuss the OMSA(ONAP Microservice Architecture): the vision of ONAP Microservice Architecture to support Carrier-Grade requirements of ONAP Microservices, which includes Service Orchestration, Service Discovery, Inter-service Communication, Service Governance and Service Monitoring and External API Gateway.&lt;/p>
&lt;p>ONAP Architecture Principle: ONAP modules should be designed as microservices: service-based with clear, concise function addressed by each service with loose coupling.&lt;/p></description></item><item><title>LFN ONAP Developer Event: Microservice Bus Tutorial</title><link>https://lopins.github.io/hugo-template/post/2017-09-25-onap-microservice-bus-tutorial-/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2017-09-25-onap-microservice-bus-tutorial-/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Microservices Bus(MSB) provide a reliable, resilient and scalable communication and governance infrastructure to support Microservice Architecture including including service registration/discovery, external API gateway, internal API gateway, client SDK. It&amp;rsquo;s a pluggable architecture so it can integrate with auth service provider to provide centralized Authentication &amp;amp; Authorization. MSB also provides a service portal to manage the REST APIs.&lt;/p>
&lt;p>MSB doesn’t depend on a specific environment. It can work in bare metal, virtual machine or containerized environment.&lt;/p></description></item><item><title>ONS ONAP Minisummit: Microservice Powered Orchestration Architecture</title><link>https://lopins.github.io/hugo-template/post/2017-04-14-onap-microservice-powered-orchestration-architecture/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2017-04-14-onap-microservice-powered-orchestration-architecture/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>In this session, I&amp;rsquo;ll talk about the MSB(Microservice BUS) project we have been using in OPEN-O as the fabric for Microservice communications.&lt;/p>
&lt;p>First, I will start with why we choose Microservice Architecture in OPEN-O.&lt;/p>
&lt;p>Then, I’d like to talk about the challenges we were facing when we turn to the microservice approach.&lt;/p>
&lt;p>Finally, How we address these challenges in OPEN-O with the help of Microservice BUS
And what’s the potential benefit MSB could bring to ONAP.&lt;/p></description></item><item><title>LFN ONAP Developer Event: MSB Technical Deep Dive and ONAP Use Cases</title><link>https://lopins.github.io/hugo-template/post/2017-04-02-onap-msb-deep-dive/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://lopins.github.io/hugo-template/post/2017-04-02-onap-msb-deep-dive/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>In this session, I&amp;rsquo;ll talk about the MSB(Microservice BUS) project we have been using in OPEN-O as the fabric for Microservice communications.&lt;/p>
&lt;p>First, I will start with why we choose Microservice Architecture in OPEN-O.&lt;/p>
&lt;p>Then, I’d like to talk about the challenges we were facing when we turn to the microservice approach.&lt;/p>
&lt;p>Finally, How we address these challenges in OPEN-O with the help of Microservice BUS
And what’s the potential benefit MSB could bring to ONAP.&lt;/p></description></item></channel></rss>